## GNU General Public License
## 
## Program pyNastran - a python interface to NASTRAN files
## Copyright (C) 2011  Steven Doyle
## 
## Author and copyright holder of pyMastran
## Steven Doyle <mesheb82@gmail.com>
## 
## This file is part of pyNastran.
## 
## pyNastran is free software: you can redistribute it and/or modify
## it under the terms of the GNU Lesser General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
## 
## pyNastran is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
## 
## You should have received a copy of the GNU Lesser General Public License
## along with pyNastran.  If not, see <http://www.gnu.org/licenses/>.
## 
## This header is automatically generated by applyLicense.py and any
## changes to it will be lost.
## 
import os
import sys
import struct
from struct import unpack

from pyNastran.op2.op2Errors import *

class DYNAMICS(object):
    def readTable_DYNAMICS(self):
        self.iTableMap = {
                            (37, 18, 183): self.readFake,
                            (57,   5,123): self.readFake,
                            (107,  1, 86): self.readFake,
                            (207,  2, 87): self.readFake,
                            (307,  3, 85): self.readFake,
                            (308,  8,348): self.readFake,
                            (707,  7,124): self.readFake,
                            (1007,10,125): self.readFake,
                            (1307,13,126): self.readFake,
                            (3107,31,127): self.readFake,
                            (5107,51,131): self.readFake,
                            (5207,52,132): self.readFake,
                            (6207,62,136): self.readFake,
                            (6607,66,137): self.readFake,
                            (7107,71,138): self.readFake,
                            (7207,72,139): self.readFake,
                            (8307,83,142): self.readFake,
                            (2107,21,195): self.readFake,
                            (2207,22,196): self.readFake,
                            
                            
                         }
        self.readRecordTable('DYNAMICS')
