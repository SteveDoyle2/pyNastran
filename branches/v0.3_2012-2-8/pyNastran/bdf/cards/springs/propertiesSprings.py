## GNU General Public License
## 
## Program pyNastran - a python interface to NASTRAN files
## Copyright (C) 2011  Steven Doyle
## 
## Author and copyright holder of pyMastran
## Steven Doyle <mesheb82@gmail.com>
## 
## This file is part of pyNastran.
## 
## pyNastran is free software: you can redistribute it and/or modify
## it under the terms of the GNU Lesser General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
## 
## pyNastran is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
## 
## You should have received a copy of the GNU Lesser General Public License
## along with pyNastran.  If not, see <http://www.gnu.org/licenses/>.
## 
## This header is automatically generated by applyLicense.py and any
## changes to it will be lost.
## 
import sys
from numpy import zeros,pi

# my code
from ..baseCard import Property

class SpringProperty(Property):
    type = 'SpringProperty'
    def __init__(self,card,data):
        Property.__init__(self,card,data)
        pass

class PELAS(SpringProperty):
    type = 'PELAS'
    def __init__(self,card=None,nPELAS=0,data=None):
        SpringProperty.__init__(self,card,data)
        nOffset = nPELAS*5
        if card:
            self.pid = card.field(1+nOffset) # 2 PELAS properties can be defined on 1 PELAS card
            self.k   = card.field(2+nOffset) # these are split into 2 separate cards
            self.ge  = card.field(3+nOffset)
            self.s   = card.field(4+nOffset)
        else:
            self.pid = data[0]
            self.k   = data[1]
            self.ge  = data[2]
            self.s   = data[3]
        ###
    def crossReference(self,model):
        pass

    def __repr__(self):
        fields = ['PELAS',self.pid,self.k,self.ge,self.s]
        return self.printCard(fields)
